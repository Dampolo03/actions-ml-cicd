name: ML Workflow Via Actions
on: push

jobs:
  # build-cpu-image:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Copy Repository Contents
  #     uses: actions/checkout@master
      
  #   - name: Publish CPU Image to DockerHub
  #     run: |
  #       cd $GITHUB_WORKSPACE
  #       echo ${PASSWORD} | docker login -u $USERNAME --password-stdin
  #       BASE_NAME="$USERNAME/ml-cicd"
  #       IMAGE_NAME="$BASE_NAME:$GITHUB_SHA"
  #       docker pull $BASE_NAME || true
  #       docker build --cache-from $BASE_NAME -t $IMAGE_NAME -t $BASE_NAME -f docker/Dockerfile .
  #       docker push $IMAGE_NAME
  #       docker push $BASE_NAME
  #     env:
  #       USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #       PASSWORD: ${{ secrets.DOCKER_PASSWORD }}   

  # build-gpu-image:
  #   runs-on: ubuntu-latest
  #   steps:

  #   - name: Copy Repository Contents
  #     uses: actions/checkout@master
      
  #   - name: Publish GPU Image to DockerHub
  #     run: |
  #       cd $GITHUB_WORKSPACE
  #       echo ${PASSWORD} | docker login -u $USERNAME --password-stdin
  #       BASE_NAME="$USERNAME/ml-cicd-gpu"
  #       IMAGE_NAME="$BASE_NAME:$GITHUB_SHA"
  #       docker pull $BASE_NAME || true
  #       docker build --cache-from $BASE_NAME -t $IMAGE_NAME -t $BASE_NAME -f docker/Dockerfile .
  #       docker push $IMAGE_NAME
  #       docker push $BASE_NAME
  #     env:
  #       USERNAME: ${{ secrets.DOCKER_USERNAME }}
  #       PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  
  submit-argo-workflow:
    #needs: [build-cpu-image, build-gpu-image]
    runs-on: ubuntu-latest
    steps: 
      
    - name: Copy Repo Files
      uses: actions/checkout@master

    - name: Build Argo Param File 
      run: |
        cd $GITHUB_WORKSPACE
        echo "GITHUB-SHA: $GITHUB_SHA" >> argo/params.yaml
          
    - name: Submit Argo Deployment
      id: argo
      uses: machine-learning-apps/gke-argo@master
      with:
        ARGO_URL: ${{ secrets.ARGO_URI }}
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        PROJECT_ID: ${{ secrets.GOOGLE_PROJECT_ID }}
        LOCATION_ZONE: "us-west1-a"
        CLUSTER_NAME: "github-actions-demo"
        WORKFLOW_YAML_PATH: "argo/workflow.yaml" # the argo workflow file relative to the repo's root.
        PARAMETER_FILE_PATH: "argo/params.yaml" # optional parameter file.
  
    - name: Create Check
      run: |
        python3 action_files/create_check_run.py "in_progress" "Argo-Workflow-Running" "ML Workflow For SHA $GITHUB_SHA" "Links [Argo Workflow]($ARGO_LINK) | [W&B Project](https://app.wandb.ai/$WANDB_ENTITY/$WANDB_PROJECT)" " "
        bash action_files/pr_comment.sh "ML Workflow For SHA $GITHUB_SHA has been instantiated:\nLinks: [Argo Workflow]($ARGO_LINK) | [W&B Project](https://app.wandb.ai/$WANDB_ENTITY/$WANDB_PROJECT) | Docker Registries: [hamelsmu/ml-cicd](https://cloud.docker.com/repository/docker/hamelsmu/ml-cicd), [hamelsmu/ml-cicd-gpu](https://cloud.docker.com/repository/docker/hamelsmu/ml-cicd-gpu)"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ARGO_LINK: ${{ steps.argo.outputs.WORKFLOW_URL }}
        WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
        WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
        ISSUE_NUMBER: 4        


